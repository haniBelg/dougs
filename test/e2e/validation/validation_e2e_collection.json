{
	"info": {
		"_postman_id": "d4d43dda-56e0-4aa0-b795-6dd270fe8cbe",
		"name": "e2e",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37679813"
	},
	"item": [
		{
			"name": "rejected.failed-balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 418\", function () {\r",
							"    pm.response.to.have.status(418);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body matches expected data\", function () {\r",
							"    const expectedResponse = {\r",
							"        \"message\": \"I’m a teapot\",\r",
							"        \"reasons\": [\r",
							"            {\r",
							"                \"message\": \"Failed balances\",\r",
							"                \"failedBalances\": [\r",
							"                    {\r",
							"                        \"expectedBalance\": 110,\r",
							"                        \"failedBalance\": {\r",
							"                            \"date\": \"2024-02-01T10:00:00.000Z\",\r",
							"                            \"balance\": 120\r",
							"                        },\r",
							"                        \"movementsSum\": 10,\r",
							"                        \"initialBalance\": {\r",
							"                            \"date\": \"2024-01-01T10:00:00.000Z\",\r",
							"                            \"balance\": 100\r",
							"                        }\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        ]\r",
							"    };\r",
							"    pm.expect(pm.response.json()).to.deep.equal(expectedResponse);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"movements\": [\r\n      {\r\n        \"id\": 1,\r\n        \"date\": \"2024-01-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 10\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"date\": \"2024-02-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 20\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"date\": \"2024-03-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 30\r\n      }\r\n    ],\r\n    \"balances\": [\r\n      {\r\n        \"date\": \"2024-01-01T10:00:00.0Z\",\r\n        \"balance\": 100\r\n      },\r\n      {\r\n        \"date\": \"2024-02-01T10:00:00.0Z\",\r\n        \"balance\": 120\r\n      },\r\n      {\r\n        \"date\": \"2024-03-01T10:00:00.0Z\",\r\n        \"balance\": 140\r\n      },\r\n      {\r\n        \"date\": \"2024-04-01T10:00:00.0Z\",\r\n        \"balance\": 170\r\n      }\r\n    ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/movements/validation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movements",
						"validation"
					]
				}
			},
			"response": []
		},
		{
			"name": "rejected.uncontrolled-at-first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 418\", function () {\r",
							"    pm.response.to.have.status(418);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body matches expected data\", function () {\r",
							"    const expectedResponse = {\r",
							"        \"message\": \"I’m a teapot\",\r",
							"        \"reasons\": [\r",
							"            {\r",
							"                \"message\": \"Uncontrolled bank operations\",\r",
							"                \"uncontrolledMovements\": [\r",
							"                    {\r",
							"                        \"id\": 1,\r",
							"                        \"date\": \"2024-01-05T10:00:00.000Z\",\r",
							"                        \"wording\": \"Wording\",\r",
							"                        \"amount\": 10\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        ]\r",
							"    };\r",
							"    pm.expect(pm.response.json()).to.deep.equal(expectedResponse);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"movements\": [\r\n      {\r\n        \"id\": 1,\r\n        \"date\": \"2024-01-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 10\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"date\": \"2024-02-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 20\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"date\": \"2024-03-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 30\r\n      }\r\n    ],\r\n    \"balances\": [\r\n      {\r\n        \"date\": \"2024-02-01T10:00:00.0Z\",\r\n        \"balance\": 110\r\n      },\r\n      {\r\n        \"date\": \"2024-03-01T10:00:00.0Z\",\r\n        \"balance\": 130\r\n      },\r\n      {\r\n        \"date\": \"2024-04-01T10:00:00.0Z\",\r\n        \"balance\": 160\r\n      }\r\n    ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/movements/validation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movements",
						"validation"
					]
				}
			},
			"response": []
		},
		{
			"name": "rejected.uncontrolled-at-last",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 418\", function () {\r",
							"    pm.response.to.have.status(418);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body matches expected data\", function () {\r",
							"    const expectedResponse = {\r",
							"        \"message\": \"I’m a teapot\",\r",
							"        \"reasons\": [\r",
							"            {\r",
							"                \"message\": \"Uncontrolled bank operations\",\r",
							"                \"uncontrolledMovements\": [\r",
							"                    {\r",
							"                        \"id\": 3,\r",
							"                        \"date\": \"2024-03-05T10:00:00.000Z\",\r",
							"                        \"wording\": \"Wording\",\r",
							"                        \"amount\": 30\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        ]\r",
							"    };\r",
							"    pm.expect(pm.response.json()).to.deep.equal(expectedResponse);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"movements\": [\r\n      {\r\n        \"id\": 1,\r\n        \"date\": \"2024-01-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 10\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"date\": \"2024-02-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 20\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"date\": \"2024-03-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 30\r\n      }\r\n    ],\r\n    \"balances\": [\r\n      {\r\n        \"date\": \"2024-01-01T10:00:00.0Z\",\r\n        \"balance\": 100\r\n      },\r\n      {\r\n        \"date\": \"2024-02-01T10:00:00.0Z\",\r\n        \"balance\": 110\r\n      },\r\n      {\r\n        \"date\": \"2024-03-01T10:00:00.0Z\",\r\n        \"balance\": 130\r\n      }\r\n    ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/movements/validation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movements",
						"validation"
					]
				}
			},
			"response": []
		},
		{
			"name": "rejected.duplicate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 418\", function () {\r",
							"    pm.response.to.have.status(418);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body matches expected data\", function () {\r",
							"    const expectedResponse = {\r",
							"        \"message\": \"I’m a teapot\",\r",
							"        \"reasons\": [\r",
							"            {\r",
							"                \"message\": \"Duplicate bank operations\",\r",
							"                \"duplicateMovements\": [\r",
							"                    {\r",
							"                        \"id\": 1,\r",
							"                        \"date\": \"2024-01-05T10:00:00.000Z\",\r",
							"                        \"wording\": \"Wording\",\r",
							"                        \"amount\": 10\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        ]\r",
							"    };\r",
							"    pm.expect(pm.response.json()).to.deep.equal(expectedResponse);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"movements\": [\r\n      {\r\n        \"id\": 1,\r\n        \"date\": \"2024-01-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 10\r\n      },\r\n      {\r\n        \"id\": 1,\r\n        \"date\": \"2024-01-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 10\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"date\": \"2024-02-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 20\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"date\": \"2024-03-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 30\r\n      }\r\n    ],\r\n    \"balances\": [\r\n      {\r\n        \"date\": \"2024-01-01T10:00:00.0Z\",\r\n        \"balance\": 100\r\n      },\r\n      {\r\n        \"date\": \"2024-02-01T10:00:00.0Z\",\r\n        \"balance\": 120\r\n      },\r\n      {\r\n        \"date\": \"2024-03-01T10:00:00.0Z\",\r\n        \"balance\": 140\r\n      },\r\n      {\r\n        \"date\": \"2024-04-01T10:00:00.0Z\",\r\n        \"balance\": 170\r\n      }\r\n    ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/movements/validation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movements",
						"validation"
					]
				}
			},
			"response": []
		},
		{
			"name": "rejected.mixed-errors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 418\", function () {\r",
							"    pm.response.to.have.status(418);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body matches expected data\", function () {\r",
							"    const expectedResponse = {\r",
							"        \"message\": \"I’m a teapot\",\r",
							"        \"reasons\": [\r",
							"            {\r",
							"                \"message\": \"Failed balances\",\r",
							"                \"failedBalances\": [\r",
							"                    {\r",
							"                        \"expectedBalance\": 140,\r",
							"                        \"failedBalance\": {\r",
							"                            \"date\": \"2024-03-01T10:00:00.000Z\",\r",
							"                            \"balance\": 130\r",
							"                        },\r",
							"                        \"movementsSum\": 20,\r",
							"                        \"initialBalance\": {\r",
							"                            \"date\": \"2024-02-01T10:00:00.000Z\",\r",
							"                            \"balance\": 120\r",
							"                        }\r",
							"                    },\r",
							"                    {\r",
							"                        \"expectedBalance\": 160,\r",
							"                        \"failedBalance\": {\r",
							"                            \"date\": \"2024-04-01T10:00:00.000Z\",\r",
							"                            \"balance\": 170\r",
							"                        },\r",
							"                        \"movementsSum\": 30,\r",
							"                        \"initialBalance\": {\r",
							"                            \"date\": \"2024-03-01T10:00:00.000Z\",\r",
							"                            \"balance\": 130\r",
							"                        }\r",
							"                    }\r",
							"                ]\r",
							"            },\r",
							"            {\r",
							"                \"message\": \"Uncontrolled bank operations\",\r",
							"                \"uncontrolledMovements\": [\r",
							"                    {\r",
							"                        \"id\": 1,\r",
							"                        \"date\": \"2024-01-05T10:00:00.000Z\",\r",
							"                        \"wording\": \"Wording\",\r",
							"                        \"amount\": 10\r",
							"                    },\r",
							"                    {\r",
							"                        \"id\": 1,\r",
							"                        \"date\": \"2024-01-05T10:00:00.000Z\",\r",
							"                        \"wording\": \"Wording\",\r",
							"                        \"amount\": 10\r",
							"                    }\r",
							"                ]\r",
							"            },\r",
							"            {\r",
							"                \"message\": \"Duplicate bank operations\",\r",
							"                \"duplicateMovements\": [\r",
							"                    {\r",
							"                        \"id\": 1,\r",
							"                        \"date\": \"2024-01-05T10:00:00.000Z\",\r",
							"                        \"wording\": \"Wording\",\r",
							"                        \"amount\": 10\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        ]\r",
							"    };\r",
							"    pm.expect(pm.response.json()).to.deep.equal(expectedResponse);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"movements\": [\r\n      {\r\n        \"id\": 1,\r\n        \"date\": \"2024-01-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 10\r\n      },\r\n      {\r\n        \"id\": 1,\r\n        \"date\": \"2024-01-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 10\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"date\": \"2024-02-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 20\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"date\": \"2024-03-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 30\r\n      }\r\n    ],\r\n    \"balances\": [\r\n      {\r\n        \"date\": \"2024-02-01T10:00:00.0Z\",\r\n        \"balance\": 120\r\n      },\r\n      {\r\n        \"date\": \"2024-03-01T10:00:00.0Z\",\r\n        \"balance\": 130\r\n      },\r\n      {\r\n        \"date\": \"2024-04-01T10:00:00.0Z\",\r\n        \"balance\": 170\r\n      }\r\n    ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/movements/validation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movements",
						"validation"
					]
				}
			},
			"response": []
		},
		{
			"name": "accepted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"    pm.response.to.have.status(202);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body matches expected data\", function () {\r",
							"    const expectedResponse = {\r",
							"        \"message\": \"accepted\"\r",
							"    };\r",
							"    pm.expect(pm.response.json()).to.deep.equal(expectedResponse);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"movements\": [\r\n      {\r\n        \"id\": 1,\r\n        \"date\": \"2024-01-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 10\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"date\": \"2024-02-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 20\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"date\": \"2024-03-05T10:00:00.0Z\",\r\n        \"wording\": \"Wording\",\r\n        \"amount\": 30\r\n      }\r\n    ],\r\n    \"balances\": [\r\n      {\r\n        \"date\": \"2024-01-01T10:00:00.0Z\",\r\n        \"balance\": 100\r\n      },\r\n      {\r\n        \"date\": \"2024-02-01T10:00:00.0Z\",\r\n        \"balance\": 110\r\n      },\r\n      {\r\n        \"date\": \"2024-03-01T10:00:00.0Z\",\r\n        \"balance\": 130\r\n      },\r\n      {\r\n        \"date\": \"2024-04-01T10:00:00.0Z\",\r\n        \"balance\": 160\r\n      }\r\n    ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/movements/validation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movements",
						"validation"
					]
				}
			},
			"response": []
		}
	]
}